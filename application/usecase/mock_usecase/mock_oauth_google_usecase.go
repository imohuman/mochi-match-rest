// Code generated by MockGen. DO NOT EDIT.
// Source: oauth_google_usecase.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	models "github.com/taniwhy/mochi-match-rest/domain/models"
	reflect "reflect"
)

// MockIGoogleOAuthUsecase is a mock of IGoogleOAuthUsecase interface
type MockIGoogleOAuthUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockIGoogleOAuthUsecaseMockRecorder
}

// MockIGoogleOAuthUsecaseMockRecorder is the mock recorder for MockIGoogleOAuthUsecase
type MockIGoogleOAuthUsecaseMockRecorder struct {
	mock *MockIGoogleOAuthUsecase
}

// NewMockIGoogleOAuthUsecase creates a new mock instance
func NewMockIGoogleOAuthUsecase(ctrl *gomock.Controller) *MockIGoogleOAuthUsecase {
	mock := &MockIGoogleOAuthUsecase{ctrl: ctrl}
	mock.recorder = &MockIGoogleOAuthUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIGoogleOAuthUsecase) EXPECT() *MockIGoogleOAuthUsecaseMockRecorder {
	return m.recorder
}

// Login mocks base method
func (m *MockIGoogleOAuthUsecase) Login(c *gin.Context) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", c)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login
func (mr *MockIGoogleOAuthUsecaseMockRecorder) Login(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockIGoogleOAuthUsecase)(nil).Login), c)
}

// Callback mocks base method
func (m *MockIGoogleOAuthUsecase) Callback(c *gin.Context) (bool, *models.GoogleUser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Callback", c)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(*models.GoogleUser)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Callback indicates an expected call of Callback
func (mr *MockIGoogleOAuthUsecaseMockRecorder) Callback(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Callback", reflect.TypeOf((*MockIGoogleOAuthUsecase)(nil).Callback), c)
}
