// Code generated by MockGen. DO NOT EDIT.
// Source: entry_history_usecase.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/taniwhy/mochi-match-rest/domain/models"
	reflect "reflect"
)

// MockIEntryHistoryUsecase is a mock of IEntryHistoryUsecase interface
type MockIEntryHistoryUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockIEntryHistoryUsecaseMockRecorder
}

// MockIEntryHistoryUsecaseMockRecorder is the mock recorder for MockIEntryHistoryUsecase
type MockIEntryHistoryUsecaseMockRecorder struct {
	mock *MockIEntryHistoryUsecase
}

// NewMockIEntryHistoryUsecase creates a new mock instance
func NewMockIEntryHistoryUsecase(ctrl *gomock.Controller) *MockIEntryHistoryUsecase {
	mock := &MockIEntryHistoryUsecase{ctrl: ctrl}
	mock.recorder = &MockIEntryHistoryUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIEntryHistoryUsecase) EXPECT() *MockIEntryHistoryUsecaseMockRecorder {
	return m.recorder
}

// FindAllEntryHistory mocks base method
func (m *MockIEntryHistoryUsecase) FindAllEntryHistory() ([]*models.EntryHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAllEntryHistory")
	ret0, _ := ret[0].([]*models.EntryHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAllEntryHistory indicates an expected call of FindAllEntryHistory
func (mr *MockIEntryHistoryUsecaseMockRecorder) FindAllEntryHistory() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAllEntryHistory", reflect.TypeOf((*MockIEntryHistoryUsecase)(nil).FindAllEntryHistory))
}

// InsertEntryHistory mocks base method
func (m *MockIEntryHistoryUsecase) InsertEntryHistory(entryHistory *models.EntryHistory) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertEntryHistory", entryHistory)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertEntryHistory indicates an expected call of InsertEntryHistory
func (mr *MockIEntryHistoryUsecaseMockRecorder) InsertEntryHistory(entryHistory interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertEntryHistory", reflect.TypeOf((*MockIEntryHistoryUsecase)(nil).InsertEntryHistory), entryHistory)
}

// UpdateEntryHistory mocks base method
func (m *MockIEntryHistoryUsecase) UpdateEntryHistory(entryHistory *models.EntryHistory) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateEntryHistory", entryHistory)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateEntryHistory indicates an expected call of UpdateEntryHistory
func (mr *MockIEntryHistoryUsecaseMockRecorder) UpdateEntryHistory(entryHistory interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateEntryHistory", reflect.TypeOf((*MockIEntryHistoryUsecase)(nil).UpdateEntryHistory), entryHistory)
}

// DeleteEntryHistory mocks base method
func (m *MockIEntryHistoryUsecase) DeleteEntryHistory(entryHistory *models.EntryHistory) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteEntryHistory", entryHistory)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteEntryHistory indicates an expected call of DeleteEntryHistory
func (mr *MockIEntryHistoryUsecaseMockRecorder) DeleteEntryHistory(entryHistory interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteEntryHistory", reflect.TypeOf((*MockIEntryHistoryUsecase)(nil).DeleteEntryHistory), entryHistory)
}
